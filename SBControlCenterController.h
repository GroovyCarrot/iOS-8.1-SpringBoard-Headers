//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SBControlCenterViewControllerDelegate.h"
#import "SBCoordinatedPresenting.h"

@class FBUIApplicationResignActiveAssertion, NSHashTable, NSMutableSet, NSSet, NSString, SBChevronView, SBControlCenterRootView, SBControlCenterViewController, SBWindow, UIDynamicAnimator, UIImageView, UIView, _UIBackdropView, _UIDynamicValueAnimation;

@interface SBControlCenterController : UIViewController <SBControlCenterViewControllerDelegate, SBCoordinatedPresenting>
{
    SBWindow *_window;
    SBControlCenterRootView *_rootView;
    SBControlCenterViewController *_viewController;
    UIImageView *_coveredContentSnapshot;
    UIView *_fullScreenGrabberContainer;
    _UIBackdropView *_fullScreenGrabberBackdrop;
    SBChevronView *_fullScreenChevron;
    FBUIApplicationResignActiveAssertion *_resignActiveAssertion;
    NSMutableSet *_preventDismissalOnLockReasons;
    _Bool _uiLocked;
    NSHashTable *_observers;
    long long _orientation;
    _Bool _animatingInitialPresentation;
    _Bool _gotFirstBackdropUpdate;
    _Bool _completingTransitionOpen;
    _UIDynamicValueAnimation *_bounceAnimation;
    UIDynamicAnimator *_animator;
    unsigned long long _animatorStopCount;
    struct CGRect _animatorStopFrame;
    _Bool _inGrabberOnlyMode;
    _Bool _presented;
    _Bool _transitioning;
    _Bool _fullyRevealed;
    double _backgroundBrightness;
}

+ (void)notifyControlCenterControl:(id)arg1 didActivate:(_Bool)arg2;
+ (id)sharedInstanceIfExists;
+ (id)sharedInstance;
+ (id)_sharedInstanceCreatingIfNeeded:(_Bool)arg1;
@property(nonatomic) double backgroundBrightness; // @synthesize backgroundBrightness=_backgroundBrightness;
@property(nonatomic, getter=isFullyRevealed) _Bool fullyRevealed; // @synthesize fullyRevealed=_fullyRevealed;
@property(nonatomic, getter=isTransitioning) _Bool transitioning; // @synthesize transitioning=_transitioning;
@property(nonatomic, getter=isPresented) _Bool presented; // @synthesize presented=_presented;
@property(nonatomic) _Bool inGrabberOnlyMode; // @synthesize inGrabberOnlyMode=_inGrabberOnlyMode;
@property(nonatomic, getter=isUILocked) _Bool UILocked; // @synthesize UILocked=_uiLocked;
- (void)controlCenterViewController:(id)arg1 backdropViewDidUpdate:(id)arg2;
- (void)controlCenterViewController:(id)arg1 handlePan:(id)arg2;
- (void)controlCenterViewController:(id)arg1 handleTap:(id)arg2;
- (_Bool)controlCenterViewController:(id)arg1 canHandleGestureRecognizer:(id)arg2;
- (void)controlCenterViewControllerWantsDismissal:(id)arg1;
- (void)updateControlAlphaForBrightness:(double)arg1;
- (void)resetControlAlpha;
- (void)_finishPresenting:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_dismissWithDuration:(double)arg1 additionalAnimations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissAnimated:(_Bool)arg1 withAdditionalAnimations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (void)_presentWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentAnimated:(_Bool)arg1;
- (void)presentAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideGrabberAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hideGrabberAnimated:(_Bool)arg1;
- (void)showGrabberAnimated:(_Bool)arg1;
- (void)cancelTransition;
- (void)abortAnimatedTransition;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 completion:(CDUnknownBlockType)arg2;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 wasCancelled:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (double)_verticalPercentageMovedOnScreenForY:(double)arg1 stopY:(double)arg2;
- (void)_cleanupAnimator;
- (id)_newDynamicAnimationForShow:(_Bool)arg1 currentValue:(double)arg2 velocity:(double)arg3 unitSize:(double)arg4;
- (void)updateTransitionWithTouchLocation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)beginPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)beginTransitionWithTouchLocation:(struct CGPoint)arg1;
- (void)_clearCoveredContentSnapshot;
- (void)_updateCoveredContentSnapshot;
- (void)_endPresentation;
- (void)_beginPresentation;
- (_Bool)allowHideTransition;
- (_Bool)allowShowTransitionSystemGesture;
- (_Bool)_allowShowTransitionSystemGesture;
- (_Bool)allowShowTransition;
- (void)_setLockHUDHidden:(_Bool)arg1;
- (void)_updateGrabberVisibility;
- (void)_updateRevealPercentage:(double)arg1;
- (void)_revealSlidingViewToHeight:(double)arg1;
- (double)_controlCenterHeightForTouchLocation:(struct CGPoint)arg1;
- (double)_yValueForClosed;
- (double)_yValueForOpen;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)wantsFullScreenLayout;
@property(readonly, nonatomic) unsigned long long hintEdge;
@property(readonly, nonatomic) double hintDisplacement;
@property(readonly, nonatomic) long long coordinatedPresentingControllerIdentifier;
- (id)_window;
- (void)preventDismissalOnLock:(_Bool)arg1 forReason:(id)arg2;
- (void)_dismissOnLock;
- (void)_uiRelockedNotification:(id)arg1;
- (void)_lockStateChangedNotification:(id)arg1;
- (_Bool)isGrabberVisible;
- (_Bool)isPresentingControllerTransitioning;
- (_Bool)isVisible;
- (void)loadView;
- (_Bool)handleMenuButtonTap;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)_enumerateObservers:(CDUnknownBlockType)arg1;
- (_Bool)isAvailableWhileLocked;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) NSSet *conflictingGestures;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSSet *gestures;
@property(readonly) unsigned long long hash;
@property(nonatomic) id <SBPresentingDelegate> presentingDelegate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) NSSet *tapExcludedViews;

@end

